<launch>
    <!-- SLAM visual args -->
	<arg name="world_frame" default="world" />
    <arg name="orb_slam_3_frame" default="orb_slam3_camera" />

    <!-- LOCAL_POSITION_NED args -->
    <arg name="base_frame" default="world" />
	<arg name="rov_frame" default="base_link" />
	<arg name="camera_frame" default="oakd_link" />

    <!-- Controller args -->
    <arg name="goal_topic" default ="controller/goalPoint" />
    <arg name="goal_rotation_topic" default ="controller/goalRotation" />
    <arg name="isrunning_topic" default ="controller/isRunning" />
    
    <!-- Launch SEND_VISO_TF2 and MAVLink publisher node -->
    <include file="$(find controls)/launch/send_viso_tf2_irl.launch">
        <arg name="world_frame" value="$(arg world_frame)" />
        <arg name="rov_frame" default="$(arg orb_slam_3_frame)" />
    </include>
    <include file="$(find controls)/launch/mavlink_publisher.launch"> 
        <arg name="base_frame" value="$(arg base_frame)" />
        <arg name="publish_frame" value="$(arg rov_frame)" />
    </include>
    <include file="$(find controls)/launch/controller.launch"> 
        <arg name="goal_topic" value="$(arg goal_topic)" />
        <arg name="goal_rotation_topic" value="$(arg goal_rotation_topic)" />
        <arg name="run_topic" value="$(arg isrunning_topic)" />
    </include>

    <!-- Launch SMACH node -->
    <arg name="respawn_smach" default="false" />
    <arg name="log_output" default="screen" />
	<node pkg="mission_planning" type="smach_controller_simulation.py" name="mission_planning" required="$(eval not respawn_smach)"
    clear_params="true" output="$(arg log_output)" respawn="$(arg respawn_smach)"> 
        <param name="base_frame" value="$(arg base_frame)" />
        <!-- <param name="publish_frame" value="$(arg publish_frame)" /> -->
        <param name="rov_frame" value="$(arg rov_frame)" />
        <param name="goal_topic" value="$(arg goal_topic)" />
        <param name="goal_rotation_topic" value ="$(arg goal_rotation_topic)" />
        <param name="isrunning_topic" value ="$(arg isrunning_topic)"/>
        <param name="world_frame" value="$(arg world_frame)" />
        <param name="orb_slam_3_frame" value="$(arg orb_slam_3_frame)" />
    </node>

	<!-- Static broadcasters for IMU <-> camera transforms courtesy of:
	 	http://wiki.ros.org/tf2/Tutorials/Writing%20a%20tf2%20static%20broadcaster%20%28C%2B%2B%29
		https://www.andre-gaschler.com/rotationconverter/ -->
	<node pkg="tf2_ros" type="static_transform_publisher" name="cam_imu_broadcaster_slam" args="-0.08 0 -0.03 0 0 0 1 rectified_orb_slam3 imu_link" />
	<node pkg="tf2_ros" type="static_transform_publisher" name="cam_imu_broadcaster_irl" args="0.08 0 0.03 0 0 0 1 $(arg rov_frame) $(arg camera_frame)" />
</launch>